# Generated by Django 5.2.3 on 2025-06-18 02:16

import django.core.validators
import django.db.models.deletion
import django.db.models.functions.comparison
import django.db.models.functions.text
import inventory.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    replaces = [('inventory', '0001_squashed_0016_delete_loan_delete_member'), ('inventory', '0017_alter_series_options_remove_book_available_and_more'), ('inventory', '0018_alter_book_condition_alter_book_series_and_more'), ('inventory', '0019_book_change_pk'), ('inventory', '0020_series_change_pk'), ('inventory', '0021_alter_book_options'), ('inventory', '0022_series_call_number_alter_series_code'), ('inventory', '0023_alter_genre_name'), ('inventory', '0024_series_language'), ('inventory', '0025_alter_series_call_number_alter_series_language'), ('inventory', '0026_alter_book_name_alter_book_volume_nb_and_more'), ('inventory', '0027_book_added_by_alter_book_date_added')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='nom')),
            ],
            options={
                'verbose_name': 'auteur',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Editor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='nom')),
            ],
            options={
                'verbose_name': 'éditeur',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, validators=[inventory.models.validate_lowercase], verbose_name='nom')),
            ],
            options={
                'verbose_name': 'genre',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('name', models.CharField(max_length=255, verbose_name='nom')),
                ('type', models.CharField(choices=[('bd', 'BD'), ('manga', 'manga'), ('comics', 'comics'), ('novel', 'roman')], max_length=16, verbose_name='type')),
                ('authors', models.ManyToManyField(to='inventory.author', verbose_name='auteurs')),
                ('editors', models.ManyToManyField(to='inventory.editor', verbose_name='éditeurs')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.genre', verbose_name='genre')),
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(db_index=True, help_text='5 caractères en majuscules (lettres et chiffres)', max_length=5, unique=True, validators=[django.core.validators.RegexValidator('^[A-Z0-9]{5}$')], verbose_name='code')),
                ('call_number', models.GeneratedField(db_persist=True, expression=django.db.models.functions.text.Concat(django.db.models.functions.text.LPad(django.db.models.functions.comparison.Cast('genre__id', models.CharField()), 2, models.Value('0')), 'code'), output_field=models.CharField(max_length=7, unique=True), verbose_name='référence')),
                ('language', models.CharField(choices=[('fr', 'Français'), ('en', 'English'), ('es', 'Español'), ('de', 'Deutsch'), ('it', 'Italiano'), ('pt', 'Português'), ('jp', 'Japonais'), ('ch', 'Chinois'), ('ru', 'Russe'), ('ar', 'Arabe')], default='fr', max_length=2, verbose_name='langue')),
            ],
            options={
                'verbose_name': 'série',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('name', models.CharField(blank=True, help_text="Laisser vide si le tome n'a pas de nom spécial, et son nom sera automatiquement généré.", max_length=255, verbose_name='nom')),
                ('volume_nb', models.PositiveIntegerField(verbose_name='tome')),
                ('duplicate_nb', models.PositiveIntegerField(default=1, verbose_name='numéro de duplicata')),
                ('condition', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='état')),
                ('date_added', models.DateTimeField(auto_now_add=True, verbose_name="date d'ajout")),
                ('comment', models.TextField(blank=True, verbose_name='commentaire')),
                ('series', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.series', verbose_name='série')),
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('call_number', models.CharField(db_index=True, editable=False, max_length=12, unique=True, validators=[django.core.validators.RegexValidator('^[0-9]{2}[A-Z0-9]{5}[0-9]{5}$')], verbose_name='cote')),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='ajouté par')),
            ],
            options={
                'verbose_name': 'livre',
                'ordering': ['call_number'],
                'unique_together': {('series', 'volume_nb', 'duplicate_nb')},
            },
        ),
    ]
