# Generated by Django 4.2.4 on 2023-09-05 16:21

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='nom')),
            ],
            options={
                'verbose_name': 'auteur',
            },
        ),
        migrations.CreateModel(
            name='Editor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='nom')),
            ],
            options={
                'verbose_name': 'éditeur',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='nom')),
            ],
            options={
                'verbose_name': 'catégorie',
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='nom')),
                ('mail', models.EmailField(max_length=254, verbose_name='email')),
                ('tel', models.CharField(blank=True, max_length=12, verbose_name='tel')),
                ('max_loans', models.PositiveIntegerField(default=1, help_text="nombre d'emprunts simultanés maximum", verbose_name="nombre d'emprunts maximum")),
                ('loan_length', models.PositiveIntegerField(default=30, help_text="durée maximale d'un emprunt en jours", verbose_name="durée d'emprunt")),
                ('bail', models.FloatField(default=0, help_text='en euros', verbose_name='caution')),
                ('last_loan', models.DateField(blank=True, verbose_name='date du dernier emprunt')),
                ('role_bdm', models.CharField(choices=[('member', 'Membre'), ('member+', 'Membre +'), ('not member', 'Non membre'), ('board', 'Bureau')], max_length=64, verbose_name='rôle au Club BDManga')),
                ('role_alir', models.CharField(choices=[('member', 'Membre'), ('member+', 'Membre +'), ('not member', 'Non membre'), ('board', 'Bureau')], max_length=64, verbose_name="rôle à l'Alir")),
                ('archived', models.BooleanField(default=False, verbose_name='ancien membre')),
                ('comment', models.TextField(blank=True, verbose_name='commentaire')),
                ('date_added', models.DateField(auto_now_add=True, verbose_name="date d'inscription")),
            ],
            options={
                'verbose_name': 'membre',
            },
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.CharField(max_length=5, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator('^[A-Z0-9]{5}$')], verbose_name='référence')),
                ('name', models.CharField(max_length=255, verbose_name='nom')),
                ('type', models.CharField(choices=[('bd', 'BD'), ('manga', 'Manga'), ('comics', 'Comics'), ('novel', 'Roman')], max_length=16, verbose_name='type')),
                ('authors', models.ManyToManyField(to='inventory.author', verbose_name='auteurs')),
                ('editors', models.ManyToManyField(to='inventory.editor', verbose_name='éditeurs')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.genre', verbose_name='genre')),
            ],
            options={
                'verbose_name': 'série',
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.CharField(max_length=12, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator('^[0-9]{2}[A-Z0-9]{5}[0-9]{5}$')], verbose_name='cote')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='nom')),
                ('volume_nb', models.PositiveIntegerField(verbose_name='numéro de volume')),
                ('duplicate_nb', models.PositiveIntegerField(default=1, verbose_name="nombre d'exemplaires")),
                ('available', models.BooleanField(default=True, verbose_name='disponible')),
                ('condition', models.PositiveSmallIntegerField(blank=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='état')),
                ('date_added', models.DateField(auto_now_add=True, verbose_name="date d'ajout")),
                ('comment', models.TextField(blank=True, verbose_name='commentaire')),
                ('series', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.series', verbose_name='série')),
            ],
            options={
                'verbose_name': 'livre',
                'unique_together': {('series', 'volume_nb', 'duplicate_nb')},
            },
        ),
        migrations.CreateModel(
            name='Loan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loan_start', models.DateField(verbose_name='date de début')),
                ('late_return', models.DateField(blank=True, help_text="date à partir de laquelle l'emprunt est en retard", verbose_name='date de retard')),
                ('loan_return', models.DateField(blank=True, verbose_name='date de retour')),
                ('archived', models.BooleanField(default=False, verbose_name='archivée')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.book', verbose_name='livre')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.member', verbose_name='membre')),
            ],
            options={
                'verbose_name': 'prêt',
                'unique_together': {('member', 'book', 'loan_start')},
            },
        ),
    ]
