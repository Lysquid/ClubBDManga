# Generated by Django 5.2.3 on 2025-06-17 03:02

import inventory.models
from django.db import migrations, models


def remove_non_compliant_book_names(apps, schema_editor):
    Book = apps.get_model('inventory', 'Book')

    books_to_update = []
    for book in Book.objects.select_related('series').all():
        book_name = book.name.lower()
        series_name = book.series.name.lower()
        if (book.name and (book_name == series_name
                or (book_name.startswith(series_name) and book_name.endswith(str(book.volume_nb))))):
            book.name = ''
            books_to_update.append(book)

    if books_to_update:
        Book.objects.bulk_update(books_to_update, ['name'])


class Migration(migrations.Migration):

    dependencies = [
        ('inventory', '0025_alter_series_call_number_alter_series_language'),
    ]

    operations = [
        migrations.AlterField(
            model_name='book',
            name='name',
            field=models.CharField(blank=True, help_text="Laisser vide si le tome n'a pas de nom spécial, et son nom sera automatiquement généré.", max_length=255, verbose_name='nom'),
        ),
        migrations.AlterField(
            model_name='book',
            name='volume_nb',
            field=models.PositiveIntegerField(default=inventory.models._next_volume_nb, verbose_name='tome'),
        ),
        migrations.RunPython(
            remove_non_compliant_book_names,
        ),
        migrations.AlterField(
            model_name='series',
            name='type',
            field=models.CharField(choices=[('bd', 'BD'), ('manga', 'manga'), ('comics', 'comics'), ('novel', 'roman')], max_length=16, verbose_name='type'),
        ),
    ]
